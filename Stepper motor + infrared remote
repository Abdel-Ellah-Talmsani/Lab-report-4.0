// This program allows the stepper motor allows the stepper motor to rotate through the commands of an infrared remote. Also is capable of 
lighting lights on the driver board 
// this is the arduino stepper library which contains a part of the code necessary to make this program work
#include <Stepper.h>
// this is the library IR remote which contains a part of the code necessary to make this program work
#include <IRremote.hpp>
// Define Constants 
// Number of steps per internal motor revolution 
const float STEPS_PER_REV = 32;
// Amount of Gear reduction 
const float GEAR_RED = 64; 
// Number of steps per geared output rotation 
const float STEPS_PER_OUT_REV = STEPS_PER_REV * GEAR_RED;
// Define Variables 
// Number of Steps required
int StepsRequired;
// Create instance of Stepper Class 
// Specify Pins used for motor coils 
// the pins used are 8,9,10,11
// Connected to ULN2003 Motor Driver In1, In2, In3, In4
// Pins entered in sequence 1-3-2-4 for proper step sequencing
Stepper steppermotor(STEPS_PER_REV, 8, 9, 10,11);
//IR
#define IReceive 9
// buttons of the remote that dictate how the stepper motor rotates
#define UP    70
#define RIGHT 67
#define OK   64
void setup() 
{
  //IRtest
  Serial.begin(9600);
  IrReceiver.begin(IReceive, ENABLE_LED_FEEDBACK);
}

void loop() 
{
 // Controls
 if (IrReceiver.decode()) 
 {
    Serial.println(IrReceiver.decodedIRData.command);
    if(IrReceiver.decodedIRData.command == OK)
    {
     // Rotate CW 1/2 turn slowly 
     StepsRequired = STEPS_PER_OUT_REV / 2; 
     steppermotor.setSpeed(100);
     steppermotor.step(StepsRequired);
     delay(1000);
    }
    else if(IrReceiver.decodedIRData.command == UP)
    {
      // Rotate CW 1/2 turn quickly
     StepsRequired = STEPS_PER_OUT_REV / 2; 
     steppermotor.setSpeed(700);
     steppermotor.step(StepsRequired);
     delay(1000);
    }
    else if(IrReceiver.decodedIRData.command == RIGHT)
    {
     // Slow - 4-step CW sequence to observve lights on driver board
      steppermotor.setSpeed(1);
      StepsRequired = 4;
      steppermotor.step(StepsRequired);
      delay(2000);
    }
    IrReceiver.resume();
 }
}
